name: CI/CD Pipeline

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  # Job 1: Build et Test Backend
  backend:
    name: Backend CI
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
    
    - name: Cache Maven packages
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
    
    - name: Build with Maven
      run: |
        cd demo
        chmod +x mvnw
        ./mvnw clean package -DskipTests
    
    - name: Run tests
      run: |
        cd demo
        ./mvnw test

  # Job 2: Build et Test Frontend
  frontend:
    name: Frontend CI
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: frontend-app/package-lock.json
    
    - name: Install dependencies
      run: |
        cd frontend-app
        npm ci
    
    - name: Build Angular app
      run: |
        cd frontend-app
        npm run build
    
    - name: Lint
      run: |
        cd frontend-app
        npm run lint || true

  # Job 3: Build Docker Images
  docker:
    name: Build Docker Images
    runs-on: ubuntu-latest
    needs: [backend, frontend]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Build Backend Image
      run: |
        docker build -t user-management-backend:latest ./demo
    
    - name: Build Frontend Image
      run: |
        docker build -t user-management-frontend:latest ./frontend-app
    
    - name: Test Docker Compose
      run: |
        docker compose config

  # Job 4: Security Scan (Bonus)
  security:
    name: Security Scan
    runs-on: ubuntu-latest
    needs: [backend, frontend]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'table'
        exit-code: '0'