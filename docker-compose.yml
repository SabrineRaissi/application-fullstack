version: '3.8'

services:
  # Base de donn√©es PostgreSQL
  database:
    image: postgres:16-alpine
    container_name: app-database
    environment:
      POSTGRES_DB: usersdb
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d usersdb"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend Spring Boot
  backend:
    build: ./demo
    container_name: app-backend
    ports:
      - "8080:8080"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://database:5432/usersdb
      - SPRING_DATASOURCE_USERNAME=admin
      - SPRING_DATASOURCE_PASSWORD=admin123
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
    depends_on:
      database:
        condition: service_healthy
    networks:
      - app-network

  # Frontend Angular
  frontend:
    build: ./frontend-app
    container_name: app-frontend
    ports:
      - "4200:80"
    depends_on:
      - backend
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data: